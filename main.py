# bot.py
import logging
from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
import asyncio
from aiocryptopay import AioCryptoPay, Networks
from aiocryptopay import *
from aiogram.client.session.aiohttp import AiohttpSession

BOT_TOKEN = '6804114220:AAHITURjgcBYYLn0nb4o03DQvXSJCD5c-14'
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

session = AiohttpSession(proxy="socks5://@47.242.34.249:33888")

crypto = AioCryptoPay(token='215084:AAyrwoP5mKQYQyXDwiCyWVIXk1OnK992t50', network=Networks.MAIN_NET)


# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command('start'))
async def start_command(message: Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–î–æ—Å—Ç—É–ø –≤ —á–∞—Ç", callback_data="buy")],
        [InlineKeyboardButton(text="–°–∞–ø–æ—Ä—Ç", callback_data="help")]
    ])
    await message.answer("–û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∏–∂–µ:", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
@dp.callback_query()
async def handle_callback_query(callback_query: CallbackQuery):
    if callback_query.data == "buy":

        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="CryptoBot", callback_data="buycryptobot")],
            [InlineKeyboardButton(text="–ö–∞—Ä—Ç–æ–π (–†–§)", callback_data="buycard")]
            ])
        await callback_query.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–±: ", reply_markup = keyboard)

    elif callback_query.data == "buycryptobot":

        fiat_invoice = await crypto.create_invoice(amount=30, fiat='USD', currency_type='fiat')
        invoice_url = fiat_invoice.bot_invoice_url

        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∞", url=f"{invoice_url}")]
        ])

        old_invoice = await crypto.get_invoices(invoice_ids=fiat_invoice.invoice_id)

        await callback_query.message.answer("–û–ø–ª–∞—Ç–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ", reply_markup=keyboard)

        while old_invoice.status == 'active':
            await asyncio.sleep(10)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
            old_invoice = await crypto.get_invoices(invoice_ids=fiat_invoice.invoice_id)  # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–Ω–≤–æ–π—Å–∞
            if old_invoice.status != 'active':
                break

        await bot.send_message(user_id, "<b>ü•≥ –ë–æ—Ç –ø–æ–ª—É—á–∏–ª –æ–ø–ª–∞—Ç—É\n\n‚è≥ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Å—ã–ª–∫–∏...</b>")
        # –î–æ–±–∞–≤—å—Ç–µ —Å—é–¥–∞ –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ CryptoBot API

    elif callback_query.data == "buycard":
        # –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã –∫–∞—Ä—Ç–æ–π –†–§
        await callback_query.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–ø–ª–∞—Ç—É –∫–∞—Ä—Ç–æ–π (–†–§).")
        # –î–æ–±–∞–≤—å—Ç–µ —Å—é–¥–∞ –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ API –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –∫–∞—Ä—Ç –†–§

    elif callback_query.data == "help":
        await callback_query.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ü–æ–º–æ—â—å.")
    await callback_query.answer()



async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
